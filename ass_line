//  line assembly job schdeulling with path printing
#include<bits/stdc++.h>
using namespace std;
int main()
{
	    cout<< "Enter the entry time" << "\n";
	     int e1,e2; cin>>e1>>e2;
	     cout<< "Enter the no. of jobs in the line" << "\n";
	       int n; cin>>n;
	    cout<< "Enter the time required in each work station in line1" << "\n";
	      int t1[n];
	      for(int i=0;i<n;i++) cin>>t1[i];
	    cout<< "Enter the time req. in each work station in line2" << "\n";
	      int t2[n];
	      for(int i=0;i<n;i++) cin>>t2[i];
	 cout<< "Enter exit time from line1 and line 2" << "\n";
	   int x1,x2; cin>>x1>>x2;
	   int t[2][n];
	   cout<< "enter the switching time from line 1 to line 2" << "\n";
	     for(int i=1;i<n;i++)
	        cin>>t[0][i];
	 cout<< "Enter the switching time from line 2 to line 1" << "\n";
	      for(int i=1;i<n;i++) cin>>t[1][i];
	     
	     // dp approach
	       int l[2][n];
	     int a1[n]; int a2[n];
	  a1[0]= e1+t1[0]; a2[0]= e2 + t2[0];
	     
	  for(int i=1;i<n;i++)
	  {
	  	   a1[i]= min(a1[i-1]+t1[i],a2[i-1]+t1[i]+t[1][i]);
	  	     if(a1[i]== a1[i-1]+t1[i]) l[0][i]= 1;
	  	       else
	  	       l[0][i]= 2;
	  	   a2[i]= min(a2[i-1]+t2[i],a1[i-1]+t2[i]+t[0][i]);
	  	      if(a2[i]== a2[i-1]+t2[i] )
	  	         l[1][i]= 2;
	  	         else l[2][i]= 1;
	  	    cout<< a1[i] << " " << a2[i] << "\n";
	  }
	    a1[n-1]+=x1; a2[n-1]+= x2;
	  cout<< "min. time to get out of assembly line" << "\n"; int res = min(a1[n-1],a2[n-1]);
	  cout<< res << "\n";
	    int le;
	     if(res== a1[n-1]) le = 1; else le= 2; 
     cout<< "path through which min. time come" << "\n";
      int k = le;
     
     for(int j=n-1;j>=1;j--)
     {
     	     k = l[k-1][j];
     	  cout<< "(" << k << "," << j << ")" << " ";
	 }
	   cout<< "(" << le << "," << n << ")" << " ";
	   
	    
}
