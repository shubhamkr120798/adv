bool iscycle(list<int>* adj, bool* vis, bool* st, int i)
{
        if(vis[i]==false)
        {
            vis[i]= true; st[i]= true;
            for(auto  j=adj[i].begin();j!=adj[i].end();j++)
            {
                   if(vis[*j]==false && iscycle(adj,vis,st,*j))
                      return true;
                      else if(st[*j]== true)
                         return true;
            }
        }
        st[i]= false;
        return false;
}
bool Graph :: isCyclic()
{
//Your code here
     bool vis[V]; memset(vis,false,sizeof(vis));
     bool st[V]; memset(vis,false,sizeof(vis));
       for(int i=0;i<V;i++)
       {
         if( iscycle(adj,vis,st,i)) return true;
       }
       return false;
}
